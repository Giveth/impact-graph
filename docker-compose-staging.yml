version: '3.3'

services:
  # Multiple GraphQL API instances (for load balancing)
  impact-graph-graphql-1:
    image: ghcr.io/giveth/impact-graph:staging
    command: npm run start:docker:server
    environment:
      - ENVIRONMENT=staging
      - LOG_PATH=/usr/src/app/logs/impact-graph-graphql-1.log
      - ENABLE_GRAPHQL=true
      - ENABLE_CRONJOBS=false
    restart: always
    volumes:
      - type: bind
        source: ./config
        target: /usr/src/app/config
      - type: bind
        source: ./config
        target: /usr/src/app/build/config
      - type: bind
        source: ./logs
        target: /usr/src/app/logs
    ports:
      - "4001:4000"
    depends_on:
      - redis-giveth
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  impact-graph-graphql-2:
    image: ghcr.io/giveth/impact-graph:staging
    command: npm run start:docker:server
    environment:
      - ENVIRONMENT=staging
      - LOG_PATH=/usr/src/app/logs/impact-graph-graphql-2.log
      - ENABLE_GRAPHQL=true
      - ENABLE_CRONJOBS=false
    restart: always
    volumes:
      - type: bind
        source: ./config
        target: /usr/src/app/config
      - type: bind
        source: ./config
        target: /usr/src/app/build/config
      - type: bind
        source: ./logs
        target: /usr/src/app/logs
    ports:
      - "4002:4000"
    depends_on:
      - redis-giveth
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  impact-graph-graphql-3:
    image: ghcr.io/giveth/impact-graph:staging
    command: npm run start:docker:server
    environment:
      - ENVIRONMENT=staging
      - LOG_PATH=/usr/src/app/logs/impact-graph-graphql-3.log
      - ENABLE_GRAPHQL=true
      - ENABLE_CRONJOBS=false
    restart: always
    volumes:
      - type: bind
        source: ./config
        target: /usr/src/app/config
      - type: bind
        source: ./config
        target: /usr/src/app/build/config
      - type: bind
        source: ./logs
        target: /usr/src/app/logs
    ports:
      - "4003:4000"
    depends_on:
      - redis-giveth
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Background jobs instance (dedicated for cronjobs only)
  impact-graph-jobs:
    image: ghcr.io/giveth/impact-graph:staging
    command: npm run start:docker:server
    environment:
      - ENVIRONMENT=staging
      - LOG_PATH=/usr/src/app/logs/impact-graph-jobs.log
      - ENABLE_GRAPHQL=false
      - ENABLE_CRONJOBS=true
    restart: always
    volumes:
      - type: bind
        source: ./config
        target: /usr/src/app/config
      - type: bind
        source: ./config
        target: /usr/src/app/build/config
      - type: bind
        source: ./logs
        target: /usr/src/app/logs
    ports:
      - "4000:4000"
    depends_on:
      - redis-giveth
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis-giveth:
    # it's better to not using the latest tag, maybe latest tag have some breaking changes
    image: redis:7.2.0-alpine3.18
    container_name: redis-giveth
    environment:
      - REDIS_ALLOW_EMPTY_PASSWORD=yes
    restart: always
    volumes:
      - redis-data:/data

volumes:
  redis-data:
