{
  "name": "giveth-graphql-api",
  "version": "1.18.0",
  "description": "Backend GraphQL server for Giveth originally forked from Topia",
  "main": "./dist/index.js",
  "dependencies": {
    "@adminjs/design-system": "3.1.5",
    "@adminjs/express": "5.0.1",
    "@adminjs/typeorm": "4.0.0",
    "@apollo/server": "4.7.4",
    "@apollo/server-plugin-landing-page-graphql-playground": "4.0.0",
    "@chainvine/sdk": "1.1.10",
    "@giveth/monoswap": "^1.3.4",
    "@safe-global/api-kit": "^2.0.0",
    "@sentry/node": "6.16.1",
    "@sentry/tracing": "^6.2.0",
    "@solana/web3.js": "^1.87.6",
    "@types/bcryptjs": "^2.4.2",
    "@types/connect-redis": "0.0.13",
    "@types/cors": "^2.8.10",
    "@types/dotenv": "^8.2.0",
    "@types/express": "^4.17.11",
    "@types/graphql-upload": "15.0.2",
    "@types/jsonwebtoken": "^8.5.0",
    "@types/marked": "^4.0.8",
    "@types/node": "^14.14.31",
    "@types/uuid": "^7.0.4",
    "@uniswap/sdk": "^3.0.3",
    "abi-decoder": "^2.4.0",
    "adminjs": "6.8.3",
    "axios": "^0.21.1",
    "axios-retry": "^3.2.4",
    "bcrypt": "^5.0.1",
    "bcryptjs": "^2.4.3",
    "body-parser": "^1.19.0",
    "bull": "^3.29.3",
    "bunyan": "^1.8.15",
    "bunyan-rotating-file-stream": "^2.0.0",
    "class-validator": "0.14.0",
    "connect": "^3.7.0",
    "connect-redis": "^4.0.4",
    "cookie-parser": "^1.4.5",
    "cors": "^2.8.5",
    "dotenv": "^8.2.0",
    "eth-sig-util": "^3.0.1",
    "ethers": "^5.7.2",
    "express": "^4.17.1",
    "express-formidable": "^1.2.0",
    "express-rate-limit": "^5.5.1",
    "express-session": "^1.17.2",
    "form-data": "^3.0.1",
    "google-spreadsheet": "^3.2.0",
    "graphql": "16.6.0",
    "graphql-tag": "^2.11.0",
    "graphql-upload": "15.0.2",
    "handlebars": "4.7.7",
    "honeyswap-sdk": "1.0.0",
    "html-pdf-node": "1.0.8",
    "html-to-text": "^9.0.4",
    "i18n": "^0.15.1",
    "ioredis": "5.0.4",
    "joi": "^17.6.0",
    "js-sha256": "^0.9.0",
    "json-stable-stringify": "^1.0.2",
    "jsonwebtoken": "^9.0.0",
    "lodash": "^4.17.21",
    "marked": "^4.2.5",
    "moment": "^2.29.4",
    "node-cron": "^3.0.2",
    "nodemailer": "^6.5.0",
    "patch-package": "^6.5.1",
    "rate-limit-redis": "^2.1.0",
    "reflect-metadata": "^0.1.13",
    "siwe": "^1.1.6",
    "slugify": "^1.4.7",
    "stripe": "^8.137.0",
    "threads": "^1.7.0",
    "twitter-api-sdk": "^1.0.9",
    "type-graphql": "2.0.0-beta.1",
    "typedi": "0.8.0",
    "typeorm": "0.3.11",
    "typescript": "^4.9.4"
  },
  "lint-staged": {
    "*.ts": [
      "tslint --fix",
      "standard --fix",
      "git add"
    ]
  },
  "devDependencies": {
    "@types/axios": "^0.14.0",
    "@types/bull": "^3.15.5",
    "@types/chai": "^4.2.15",
    "@types/html-to-text": "^9.0.0",
    "@types/lodash": "^4.14.197",
    "@types/mocha": "^8.2.1",
    "@types/node-cron": "^3.0.0",
    "chai": "^4.3.0",
    "husky": "^4.3.8",
    "lint-staged": "^10.5.4",
    "mocha": "^10.2.0",
    "prettier": "^2.4.1",
    "segment-analytics-node": "1.0.24",
    "sinon": "^13.0.1",
    "ts-node": "10.9.1",
    "ts-node-dev": "2.0.0",
    "tslint": "^6.1.3",
    "tslint-config-prettier": "^1.18.0",
    "tslint-plugin-prettier": "^2.3.0"
  },
  "scripts": {
    "tslint": "tslint -c tslint.json '{src,test}/**/*.ts'",
    "tslint:fix": "tslint -c tslint.json --fix '{src,test,migration}/**/*.ts'",
    "test": "NODE_ENV=test mocha --config ./.mocharc.all-test.json",
    "test:syncProjectsRequiredForListing": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/services/cronJobs/syncProjectsRequiredForListing.test.ts",
    "test:projectEntity": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/entities/project.test.ts",
    "test:projectValidators": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/utils/validators/projectValidator.test.ts",
    "test:onramperWebhook": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/services/onramper/webhookHandler.test.ts",
    "test:powerSnapshotRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/powerSnapshotRepository.test.ts",
    "test:instantBoostingRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/instantBoostingRepository.test.ts",
    "test:donationTracker": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/services/segment/DonationTracker.test.ts",
    "test:userRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/userRepository.test.ts",
    "test:statusReasonRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/statusReasonRepository.test.ts",
    "test:donationRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/donationRepository.test.ts",
    "test:reactionRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/reactionRepository.test.ts",
    "test:campaignRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/campaignRepository.test.ts",
    "test:socialProfileRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/socialProfileRepository.test.ts",
    "test:projectVerificationRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/projectVerificationRepository.test.ts",
    "test:qfRoundRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/qfRoundRepository.test.ts",
    "test:qfRoundHistoryRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/qfRoundHistoryRepository.test.ts",
    "test:qfRoundService": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/services/qfRoundService.test.ts",
    "test:project": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/entities/project.test.ts",
    "test:notifyDonationsWithSegment": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/services/cronJobs/notifyDonationsWithSegment.test.ts",
    "test:checkProjectVerificationStatus": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/services/cronJobs/checkProjectVerificationStatus.test.ts",
    "test:statusReasonResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/statusReasonResolver.test.ts",
    "test:uploadResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/uploadResolver.test.ts",
    "test:traceImageUpload": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/traceImageUpload.test.ts",
    "test:socialProfileResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/socialProfilesResolver.test.ts",
    "test:userResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/userResolver.test.ts",
    "test:campaignResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/campaignResolver.test.ts",
    "test:reactionResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/reactionResolver.test.ts",
    "test:donationResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/donationResolver.test.ts",
    "test:projectResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/projectResolver.test.ts",
    "test:chainvineResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/chainvineResolver.test.ts",
    "test:qfRoundResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/qfRoundResolver.test.ts",
    "test:qfRoundHistoryResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/qfRoundHistoryResolver.test.ts",
    "test:projectVerificationResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/projectVerificationFormResolver.test.ts",
    "test:givPowerSubgraphAdapter": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/adapters/givpowerSubgraph/givPowerSubgraphAdapter.test.ts",
    "test:projectRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/projectRepository.test.ts",
    "test:projectUpdateRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/projectUpdateRepository.test.ts",
    "test:powerBalanceSnapshotRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/powerBalanceSnapshotRepository.test.ts",
    "test:powerBoostingRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/powerBoostingRepository.test.ts",
    "test:previousRoundRankRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/previousRoundRankRepository.test.ts",
    "test:broadcastNotificationRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/broadcastNotificationRepository.test.ts",
    "test:userPowerRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/userPowerRepository.test.ts",
    "test:powerRoundRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/powerRoundRepository.test.ts",
    "test:userProjectPowerRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/userProjectPowerViewRepository.test.ts",
    "test:projectPowerRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/projectPowerViewRepository.test.ts",
    "test:dbCronRepository": "NODE_ENV=test mocha  -t 90000 ./test/pre-test-scripts.ts  ./src/repositories/dbCronRepository.test.ts",
    "test:powerBoostingResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/powerBoostingResolver.test.ts",
    "test:userProjectPowerResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/userProjectPowerResolver.test.ts",
    "test:projectPowerResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/projectPowerResolver.test.ts",
    "test:instantPowerResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/instantPowerResolver.test.ts",
    "test:fillSnapshotBalance": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/services/cronJobs/fillSnapshotBalances.test.ts",
    "test:projectAddressRepository": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/repositories/projectAddressRepository.test.ts",
    "test:donationService": "NODE_ENV=test mocha ./test/pre-test-scripts.ts ./src/repositories/qfRoundHistoryRepository.test.ts  ./src/services/donationService.test.ts",
    "test:userService": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/services/userService.test.ts",
    "test:reactionsService": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/services/reactionsService.test.ts",
    "test:powerSnapshotService": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/services/powerSnapshotServices.test.ts",
    "test:transactionsService": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  src/services/chains/index.test.ts",
    "test:transactionsService:evm": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  src/services/chains/evm/transactionService.test.ts",
    "test:transactionsService:solana": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  src/services/chains/solana/transactionService.test.ts",
    "test:projectUpdatesService": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/services/projectUpdatesService.test.ts",
    "test:powerBoostingService": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/services/powerBoostingService.test.ts",
    "test:blockByDateService": "NODE_ENV=test mocha ./src/services/blockByDateService.test.ts",
    "test:instantPowerBoostingService": "NODE_ENV=test mocha ./test/pre-test-scripts.ts ./src/services/instantBoostingServices.test.ts",
    "test:categoryResolver": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/resolvers/categoryResolver.test.ts",
    "test:givpower": "NODE_ENV=test mocha -b -t 30000 ./test/pre-test-scripts.ts ./src/repositories/powerBoostingRepository.test.ts  ./src/repositories/userPowerRepository.test.ts ./src/repositories/powerRoundRepository.test.ts ./src/repositories/userProjectPowerViewRepository.test.ts ./src/repositories/projectPowerViewRepository.test.ts ./src/resolvers/powerBoostingResolver.test.ts ./src/resolvers/userProjectPowerResolver.test.ts ./src/resolvers/projectPowerResolver.test.ts ./src/adapters/givpowerSubgraph/givPowerSubgraphAdapter.test.ts ./src/repositories/projectRepository.test.ts ./src/resolvers/projectResolver.test.ts ./src/repositories/dbCronRepository.test.ts",
    "test:apiGive": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/routers/apiGivRoutes.test.ts",
    "test:adminJs": "NODE_ENV=test mocha ./test/pre-test-scripts.ts ./src/server/adminJs/**/*.test.ts ",
    "test:donationTab": "NODE_ENV=test mocha ./test/pre-test-scripts.ts ./src/server/adminJs/tabs/donationTab.test.ts ",
    "test:poignArt": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/services/poignArt/api.test.ts",
    "test:bootstrap": "NODE_ENV=test mocha ./test/pre-test-scripts.ts  ./src/server/bootstrap.test.ts",
    "test:utils": "NODE_ENV=test mocha ./src/utils/utils.test.ts",
    "start": "NODE_ENV=development ts-node-dev --project ./tsconfig.json --respawn ./src/index.ts",
    "serve": "pm2 startOrRestart ecosystem.config.js --node-args='--max-old-space-size=8192'",
    "db:migrate:run:test": "NODE_ENV=test npx typeorm-ts-node-esm migration:run -d ./src/ormconfig.ts",
    "db:migrate:revert:test": "NODE_ENV=test npx typeorm-ts-node-esm migration:revert -d ./src/ormconfig.ts",
    "db:migrate:run:local": "NODE_ENV=development npx typeorm-ts-node-esm migration:run -d ./src/ormconfig.ts",
    "db:migrate:revert:local": "NODE_ENV=development npx typeorm-ts-node-esm migration:revert -d ./src/ormconfig.ts",
    "db:migrate:run:production": "NODE_ENV=production npx typeorm-ts-node-esm migration:run -d ./src/ormconfig.ts",
    "db:migrate:rever:productiont": "NODE_ENV=production npx typeorm-ts-node-esm migration:revert -d ./src/ormconfig.ts",
    "prettify": "prettier --write '**/*.ts*'",
    "db:migrate:seedToken:run": "NODE_ENV=development ts-node ./node_modules/typeorm/cli -f ./src/seedToken-ormconfig.ts migration:run",
    "db:migrate:seedToken:revert": "NODE_ENV=development ts-node ./node_modules/typeorm/cli -f ./src/seedToken-ormconfig.ts migration:revert",
    "build": "rm -rf ./build && tsc && mkdir ./build/config && mkdir ./build/src/server/adminJs/tabs/components && cp -r src/server/adminJs/tabs/components/* ./build/src/server/adminJs/tabs/components/ && mkdir ./build/src/utils/locales && cp -r ./src/utils/locales/* ./build/src/utils/locales/ ",
    "dev": "NODE_ENV=development node ./build/src/index.js",
    "production": "NODE_ENV=production node ./build/src/index.js",
    "start:docker:server": "npm run db:migrate:run:production && npm run production",
    "start:docker:locally": "npm run db:migrate:run:local && npm run dev",
    "postinstall": "patch-package"
  },
  "husky": {
    "hooks": {
      "pre-commit": "npm run tslint"
    }
  },
  "standard": {
    "env": [
      "mocha"
    ]
  },
  "engines": {
    "node": ">=16.14.2"
  },
  "overrides": {
    "admin-bro": {
      "rollup-plugin-terser": "7.0.2"
    },
    "bull": {
      "cron-parser": {
        "moment-timezone": "0.5.37"
      }
    },
    "find-versions": {
      "semver-regex": "3.1.4"
    },
    "siwe": {
      "ethers": "^5.5.4"
    }
  },
  "author": "James Farrell",
  "license": "ISC"
}
